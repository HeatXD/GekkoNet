name: Create Release
on:
  push:
    branches: [ main ]
permissions:
  contents: write
  packages: write
  deployments: write
jobs:
  build:
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
        build_type: [static, shared]
        asio: [with_asio, no_asio]
        include:
          - os: windows-latest
            archive_ext: zip
            archive_cmd: 7z a
            platform: windows
          - os: ubuntu-latest
            archive_ext: tar.gz
            archive_cmd: tar -czf
            platform: linux
          - os: macos-latest
            archive_ext: tar.gz
            archive_cmd: tar -czf
            platform: macos
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        working-directory: GekkoLib
    steps:
      - uses: actions/checkout@v4
      
      - name: Create build directory
        run: cmake -E make_directory build
      
      - name: Configure CMake
        run: |
          cmake -B build \
          -DCMAKE_BUILD_TYPE=Release \
          -DBUILD_SHARED_LIBS=${{ matrix.build_type == 'shared' && 'ON' || 'OFF' }} \
          -DNO_ASIO_BUILD=${{ matrix.asio == 'no_asio' && 'ON' || 'OFF' }}
      
      - name: Build
        run: cmake --build build --config Release
      
      - name: Prepare files for packaging
        run: |
          mkdir -p package/Release/lib
          mkdir -p package/Release/include
          cp -r include/* package/Release/include/
          if [ "${{ matrix.os }}" = "windows-latest" ]; then
            cp build/Release/* package/Release/lib/ || true
          else
            cp build/* package/Release/lib/ || true
          fi
        shell: bash
      
      - name: Create Windows Archive
        if: matrix.os == 'windows-latest'
        run: |
          cd package
          7z a ../GekkoNet-${{ matrix.platform }}-${{ matrix.build_type }}-${{ matrix.asio }}-Release.${{ matrix.archive_ext }} *
      
      - name: Create Unix Archive
        if: matrix.os != 'windows-latest'
        run: |
          cd package
          tar -czf ../GekkoNet-${{ matrix.platform }}-${{ matrix.build_type }}-${{ matrix.asio }}-Release.${{ matrix.archive_ext }} *
      
      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: GekkoNet-${{ matrix.platform }}-${{ matrix.build_type }}-${{ matrix.asio }}-Release
          path: GekkoNet-${{ matrix.platform }}-${{ matrix.build_type }}-${{ matrix.asio }}-Release.${{ matrix.archive_ext }}

  create_release:
    needs: build
    runs-on: ubuntu-latest
    if: ${{ success() }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Get version
        id: version
        run: |
          echo "version=$(date +'%Y.%m.%d')-$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
      
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.version.outputs.version }}
          release_name: Release ${{ steps.version.outputs.version }}
          draft: false
          prerelease: false
      
      - name: Download all artifacts
        uses: actions/download-artifact@v3
      
      - name: List artifacts
        run: ls -R
      
      - name: Upload Release Assets
        uses: softprops/action-gh-release@v1
        with:
          files: |
            GekkoNet-*/*
          tag_name: v${{ steps.version.outputs.version }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
